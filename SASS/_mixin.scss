@mixin maxWidth($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin minWidth($breakpoint) {
  @media screen and(min-width: $breakpoint) {
    @content;
  }
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}
@mixin blockHeader($desc: "true") {
  .block-header {
    text-align: center;
    max-width: 96rem;
    margin-left: auto;
    margin-right: auto;
    &-caption {
      font-family: $third-font;
      margin-bottom: 2rem;
      font-size: 2.4rem;
    }
    &-title {
      font-weight: bold;
      font-size: 3rem;
      text-transform: uppercase;
      margin-bottom: 3.5rem;
      padding-bottom: 3.5rem;
      position: relative;
      &:before {
        content: "";
        @include absolute("left");
        @include size(7rem, 4px);
        @include bgc($primary-color);
      }
    }
    @if $desc == "true" {
      &-desc {
        font-size: 1.5rem;
        font-family: $secondary-font;
        line-height: 1.4;
        color: $text-color;
        font-weight: 300;
      }
    }
  }
}

@mixin absolute($direction: "left") {
  position: absolute;
  @if $direction == "left" {
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
  }

  @if $direction == "top" {
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }
  @if $direction == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
@mixin bgc($color: red) {
  background-color: $color;
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}
@mixin textClamp($row: 1, $size: 100%) {
  display: -webkit-box;
  -webkit-line-clamp: $row;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  word-break : break-word;
}
@mixin hoverEfect($item, $content,$transform: "true") {
  #{$item} {
    position: relative;
    cursor: pointer;
    z-index: 1;
    transition: 0.3s all linear;
    #{$content} {
      opacity: 0;
      visibility: hidden;
      transition: 0.3s all linear;
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      z-index: 2;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        to bottom,
        rgba($primary-color, 0.8),
        rgba($secondary-color, 0.7)
      );;
      @if $transform == "true"{
        background: linear-gradient(
          to bottom,
          rgba($primary-color, 0.8),
          rgba($third-color, 0.7)
        );
      }
      display: flex;
      align-items: center;
      justify-content: center;
    }
    @if $transform == "true" {
      &:before {
        content: "";
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        z-index: -1;
        @include bgc($third-color);
        transition: 0.4s all linear;
      }
    }
    &:hover {
      @if $transform == "true" {
        transform: translate(-1rem, -1rem);
        &:before {
          transform: translate(1rem, 1rem);
        }
      }
      #{$content} {
        opacity: 1;
        visibility: visible;
      }
    }
  }
}
@mixin touchSlider($width: 80%, $gap: 2rem, $padding: 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  padding-top: 2rem;
  grid-auto-columns: $width;
  grid-auto-flow: column;
  grid-template-columns: unset;
  grid-row-gap: $gap;
  overflow-x: auto;
  @include hideScroll();
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;

  & > * {
    scroll-snap-align: start;
    width: auto;
  }
}
